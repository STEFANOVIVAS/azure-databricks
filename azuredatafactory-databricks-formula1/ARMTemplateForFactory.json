{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azuredatafactory-databricks-formula1"
		},
		"ls_databricks_adls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_databricks_adls'"
		},
		"Azure_Databricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0608-124419-o4ro4hi7"
		},
		"ls_databricks_adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://formula1projectlake.dfs.core.windows.net/"
		},
		"Formula-1 trigger_properties_pipeline_parameters_param_window_end_date": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion Data Formula-1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Folders details",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "databricks_formula1_raw",
								"type": "DatasetReference",
								"parameters": {
									"param_window_end_date": {
										"value": "@pipeline().parameters.param_window_end_date",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If folder exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Folders details",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Folders details').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingestion_circuits",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Ingest/1.Ingest_circuit_files",
										"baseParameters": {
											"param_data_source": {
												"value": "@variables('var_data_source')",
												"type": "Expression"
											},
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_races",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Ingest/2.Ingest_race_files",
										"baseParameters": {
											"param_data_source": {
												"value": "@variables('var_data_source')",
												"type": "Expression"
											},
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_drivers",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Ingest/4. Ingest_drivers",
										"baseParameters": {
											"param_data_source": {
												"value": "@variables('var_data_source')",
												"type": "Expression"
											},
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_constructors",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Ingest/3. Ingest_constructors",
										"baseParameters": {
											"param_data_source": {
												"value": "@variables('var_data_source')",
												"type": "Expression"
											},
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_results",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Ingest/5. Ingest_results",
										"baseParameters": {
											"param_data_source": {
												"value": "@variables('var_data_source')",
												"type": "Expression"
											},
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_pit_stops",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Ingest/6. Ingest_pit_stops",
										"baseParameters": {
											"param_data_source": {
												"value": "@variables('var_data_source')",
												"type": "Expression"
											},
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_lap_times",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Ingest/7. Ingest_lap_times",
										"baseParameters": {
											"param_data_source": {
												"value": "@variables('var_data_source')",
												"type": "Expression"
											},
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_qualifying",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Ingest/8. Ingest_qualifying",
										"baseParameters": {
											"param_data_source": {
												"value": "@variables('var_data_source')",
												"type": "Expression"
											},
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_window_end_date": {
						"type": "string"
					}
				},
				"variables": {
					"var_data_source": {
						"type": "String",
						"defaultValue": "Ergast"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/databricks_formula1_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/Azure_Databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/databricks_formula1_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_databricks_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_window_end_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@formatDateTime(dataset().param_window_end_date,'yyyy-MM-dd')",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"constructorId": {
							"type": "integer"
						},
						"constructorRef": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"nationality": {
							"type": "string"
						},
						"url": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_Databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2150174093244524.4.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/4d2b06c4-43c3-4174-ae4f-7cd2d52bdae2/resourceGroups/Databricks-rg/providers/Microsoft.Databricks/workspaces/databricks-learn-ws",
					"existingClusterId": "[parameters('Azure_Databricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks_adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_databricks_adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_databricks_adls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Transform Data Formula-1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Folders details",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "databricks_formula1_raw",
								"type": "DatasetReference",
								"parameters": {
									"param_window_end_date": {
										"value": "@pipeline().parameters.param_window_end_date",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If folder exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Folders details",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Folders details').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Transform race results",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Transformation/1.Race results",
										"baseParameters": {
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Transform drivers standings",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Transform race results",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Transformation/2. Drivers standings",
										"baseParameters": {
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Transform constructors standings",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Transform race results",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Transformation/3. Constructors standings",
										"baseParameters": {
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Transform calculated race results",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/tefinhovivas@hotmail.com/azure-databricks-project/Transformation/4. calculated_race_results",
										"baseParameters": {
											"param_file_date": {
												"value": "@formatDateTime(pipeline().parameters.param_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Azure_Databricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_window_end_date": {
						"type": "string"
					}
				},
				"variables": {
					"var_data_source": {
						"type": "String",
						"defaultValue": "Ergast"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/databricks_formula1_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/Azure_Databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Processed Data Formula-1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Ingestion Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Ingestion Data Formula-1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_window_end_date": {
									"value": "@pipeline().parameters.param_window_end_date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Transform Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Ingestion Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Transform Data Formula-1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_window_end_date": {
									"value": "@pipeline().parameters.param_window_end_date",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_window_end_date": {
						"type": "string"
					}
				},
				"variables": {
					"var_data_source": {
						"type": "String",
						"defaultValue": "Ergast"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Ingestion Data Formula-1')]",
				"[concat(variables('factoryId'), '/pipelines/Transform Data Formula-1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Formula-1 trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "Processed Data Formula-1",
						"type": "PipelineReference"
					},
					"parameters": {
						"param_window_end_date": "[parameters('Formula-1 trigger_properties_pipeline_parameters_param_window_end_date')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 168,
					"startTime": "2021-03-14T10:00:00Z",
					"endTime": "2021-04-25T10:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Processed Data Formula-1')]"
			]
		}
	]
}